package persistence.db.test.usertourteam.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import persistence.db.test.usertourteam.UserTourTeam;
import persistence.db.test.usertourteam.UserTourTeamManager;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * persistence.db.test.usertourteam.UserTourTeam} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserTourTeamManagerImpl 
extends AbstractManager<UserTourTeam> 
implements GeneratedUserTourTeamManager {
    
    private final TableIdentifier<UserTourTeam> tableIdentifier;
    
    protected GeneratedUserTourTeamManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("test", "test", "UserTourTeam");
    }
    
    @Override
    public TableIdentifier<UserTourTeam> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<UserTourTeam>> fields() {
        return UserTourTeamManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<UserTourTeam>> primaryKeyFields() {
        return Stream.of(
            UserTourTeam.USER_TOUR_TEAM_ID
        );
    }
}