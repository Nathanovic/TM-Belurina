package persistence.db.test.runnerinusertourteam.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;
import persistence.db.test.runnerinusertourteam.RunnerInUserTourTeam;
import persistence.db.test.runnerinusertourteam.RunnerInUserTourTeamImpl;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * persistence.db.test.runnerinusertourteam.RunnerInUserTourTeam} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRunnerInUserTourTeamSqlAdapter implements SqlAdapter<RunnerInUserTourTeam> {
    
    private final TableIdentifier<RunnerInUserTourTeam> tableIdentifier;
    
    protected GeneratedRunnerInUserTourTeamSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("test", "test", "RunnerInUserTourTeam");
    }
    
    protected RunnerInUserTourTeam apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setUserTourTeamId( resultSet.getInt(1 + offset))
            .setRunnerId(       resultSet.getInt(2 + offset))
            ;
    }
    
    protected RunnerInUserTourTeamImpl createEntity() {
        return new RunnerInUserTourTeamImpl();
    }
    
    @Override
    public TableIdentifier<RunnerInUserTourTeam> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, RunnerInUserTourTeam> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, RunnerInUserTourTeam> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}