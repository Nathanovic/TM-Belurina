package persistence.db.test.runnerinusertourteam.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import persistence.db.test.runner.Runner;
import persistence.db.test.runnerinusertourteam.RunnerInUserTourTeam;
import persistence.db.test.usertourteam.UserTourTeam;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * persistence.db.test.runnerinusertourteam.RunnerInUserTourTeam}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRunnerInUserTourTeamImpl implements RunnerInUserTourTeam {
    
    private int userTourTeamId;
    private int runnerId;
    
    protected GeneratedRunnerInUserTourTeamImpl() {}
    
    @Override
    public int getUserTourTeamId() {
        return userTourTeamId;
    }
    
    @Override
    public int getRunnerId() {
        return runnerId;
    }
    
    @Override
    public RunnerInUserTourTeam setUserTourTeamId(int userTourTeamId) {
        this.userTourTeamId = userTourTeamId;
        return this;
    }
    
    @Override
    public RunnerInUserTourTeam setRunnerId(int runnerId) {
        this.runnerId = runnerId;
        return this;
    }
    
    @Override
    public UserTourTeam findUserTourTeamId(Manager<UserTourTeam> foreignManager) {
        return foreignManager.stream().filter(UserTourTeam.USER_TOUR_TEAM_ID.equal(getUserTourTeamId())).findAny().orElse(null);
    }
    
    @Override
    public Runner findRunnerId(Manager<Runner> foreignManager) {
        return foreignManager.stream().filter(Runner.RUNNER_ID.equal(getRunnerId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("userTourTeamId = " + Objects.toString(getUserTourTeamId()));
        sj.add("runnerId = "       + Objects.toString(getRunnerId()));
        return "RunnerInUserTourTeamImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof RunnerInUserTourTeam)) { return false; }
        final RunnerInUserTourTeam thatRunnerInUserTourTeam = (RunnerInUserTourTeam)that;
        if (this.getUserTourTeamId() != thatRunnerInUserTourTeam.getUserTourTeamId()) { return false; }
        if (this.getRunnerId() != thatRunnerInUserTourTeam.getRunnerId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUserTourTeamId());
        hash = 31 * hash + Integer.hashCode(getRunnerId());
        return hash;
    }
}