package persistence.db.test.tour.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import persistence.db.test.tour.Tour;
import persistence.db.test.tour.TourManager;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * persistence.db.test.tour.Tour} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedTourManagerImpl 
extends AbstractManager<Tour> 
implements GeneratedTourManager {
    
    private final TableIdentifier<Tour> tableIdentifier;
    
    protected GeneratedTourManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("test", "test", "Tour");
    }
    
    @Override
    public TableIdentifier<Tour> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Tour>> fields() {
        return TourManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Tour>> primaryKeyFields() {
        return Stream.of(
            Tour.TOUR_ID
        );
    }
}