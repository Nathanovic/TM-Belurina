package persistence.db.test.tour.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import persistence.db.test.tour.Tour;

import java.util.OptionalInt;

/**
 * The generated base for the {@link persistence.db.test.tour.Tour}-interface
 * representing entities of the {@code Tour}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedTour {
    
    /**
     * This Field corresponds to the {@link Tour} field that can be obtained
     * using the {@link Tour#getTourId()} method.
     */
    IntField<Tour, Integer> TOUR_ID = IntField.create(
        Identifier.TOUR_ID,
        Tour::getTourId,
        Tour::setTourId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Tour} field that can be obtained
     * using the {@link Tour#getName()} method.
     */
    StringField<Tour, String> NAME = StringField.create(
        Identifier.NAME,
        Tour::getName,
        Tour::setName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Tour} field that can be obtained
     * using the {@link Tour#getYear()} method.
     */
    ComparableField<Tour, Integer, Integer> YEAR = ComparableField.create(
        Identifier.YEAR,
        o -> OptionalUtil.unwrap(o.getYear()),
        Tour::setYear,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the tourId of this Tour. The tourId field corresponds to the
     * database column test.test.Tour.TourId.
     * 
     * @return the tourId of this Tour
     */
    int getTourId();
    
    /**
     * Returns the name of this Tour. The name field corresponds to the database
     * column test.test.Tour.Name.
     * 
     * @return the name of this Tour
     */
    String getName();
    
    /**
     * Returns the year of this Tour. The year field corresponds to the database
     * column test.test.Tour.Year.
     * 
     * @return the year of this Tour
     */
    OptionalInt getYear();
    
    /**
     * Sets the tourId of this Tour. The tourId field corresponds to the
     * database column test.test.Tour.TourId.
     * 
     * @param tourId to set of this Tour
     * @return       this Tour instance
     */
    Tour setTourId(int tourId);
    
    /**
     * Sets the name of this Tour. The name field corresponds to the database
     * column test.test.Tour.Name.
     * 
     * @param name to set of this Tour
     * @return     this Tour instance
     */
    Tour setName(String name);
    
    /**
     * Sets the year of this Tour. The year field corresponds to the database
     * column test.test.Tour.Year.
     * 
     * @param year to set of this Tour
     * @return     this Tour instance
     */
    Tour setYear(Integer year);
    
    enum Identifier implements ColumnIdentifier<Tour> {
        
        TOUR_ID ("TourId"),
        NAME    ("Name"),
        YEAR    ("Year");
        
        private final String columnId;
        private final TableIdentifier<Tour> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "test";
        }
        
        @Override
        public String getSchemaId() {
            return "test";
        }
        
        @Override
        public String getTableId() {
            return "Tour";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Tour> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}