package persistence.db.test.userteam.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;
import persistence.db.test.runner.Runner;
import persistence.db.test.user.User;
import persistence.db.test.userteam.UserTeam;

/**
 * The generated base for the {@link
 * persistence.db.test.userteam.UserTeam}-interface representing entities of the
 * {@code UserTeam}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedUserTeam {
    
    /**
     * This Field corresponds to the {@link UserTeam} field that can be obtained
     * using the {@link UserTeam#getUserId()} method.
     */
    IntForeignKeyField<UserTeam, Integer, User> USER_ID = IntForeignKeyField.create(
        Identifier.USER_ID,
        UserTeam::getUserId,
        UserTeam::setUserId,
        User.USER_ID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link UserTeam} field that can be obtained
     * using the {@link UserTeam#getRunnerId()} method.
     */
    IntForeignKeyField<UserTeam, Integer, Runner> RUNNER_ID = IntForeignKeyField.create(
        Identifier.RUNNER_ID,
        UserTeam::getRunnerId,
        UserTeam::setRunnerId,
        Runner.RUNNER_ID,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the userId of this UserTeam. The userId field corresponds to the
     * database column test.test.UserTeam.UserId.
     * 
     * @return the userId of this UserTeam
     */
    int getUserId();
    
    /**
     * Returns the runnerId of this UserTeam. The runnerId field corresponds to
     * the database column test.test.UserTeam.RunnerId.
     * 
     * @return the runnerId of this UserTeam
     */
    int getRunnerId();
    
    /**
     * Sets the userId of this UserTeam. The userId field corresponds to the
     * database column test.test.UserTeam.UserId.
     * 
     * @param userId to set of this UserTeam
     * @return       this UserTeam instance
     */
    UserTeam setUserId(int userId);
    
    /**
     * Sets the runnerId of this UserTeam. The runnerId field corresponds to the
     * database column test.test.UserTeam.RunnerId.
     * 
     * @param runnerId to set of this UserTeam
     * @return         this UserTeam instance
     */
    UserTeam setRunnerId(int runnerId);
    
    /**
     * Queries the specified manager for the referenced User. If no such User
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    User findUserId(Manager<User> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Runner. If no such
     * Runner exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Runner findRunnerId(Manager<Runner> foreignManager);
    
    enum Identifier implements ColumnIdentifier<UserTeam> {
        
        USER_ID   ("UserId"),
        RUNNER_ID ("RunnerId");
        
        private final String columnId;
        private final TableIdentifier<UserTeam> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "test";
        }
        
        @Override
        public String getSchemaId() {
            return "test";
        }
        
        @Override
        public String getTableId() {
            return "UserTeam";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<UserTeam> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}